{"version":3,"sources":["logo.svg","component/Clock/Clock.js","component/Title/Title.js","component/Input/Input.js","component/Numeric/Numeric.js","component/planet/skyState/SkyState.js","component/visual/Visual.js","component/container/Container.js","component/Badge/Badge.js","component/box/Box.js","component/Loader/Loader.js","containers/weather/Weather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","state","time","min","hour","Date","this","ticktack","setInterval","a","async","fetch","props","lat","lon","then","timezone","json","setState","substr","date","getDay","className","whatdayIs","Component","Title","children","tag","Input","inputRefs","React","createRef","current","focus","onChange","onKeyPress","value","ref","type","Numeric","temp","feelsLike","temp_min","temp_max","windDeg","windSpeed","toFixed","deg","wind","SkyState","sky","classes","classnames","src","iconPicker","alt","Visual","sunrise","sunset","weather","translate","Container","Badge","map","item","key","Box","country","city","error","night","whatTime","defaultProps","Loader","Weather","data","coord","loading","findPlace","onChangeHandler","e","target","getData","url","FIND_CITY","response","console","log","main","description","feels_like","pressure","humidity","speed","sys","name","find","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.053ec816.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react'\r\n\r\nexport default class Clock extends Component {\r\n    state={\r\n        time: '00:00',\r\n        min: '00',\r\n        hour: '00'\r\n    }\r\n    async componentDidMount(){\r\n        let date = new Date()\r\n        this.ticktack()\r\n         let  timerId =  setInterval(async() => {\r\n           this.ticktack()\r\n        }, 60000);\r\n    }\r\n    async ticktack(){\r\n        var date = new Date();\r\n        const timezone = await fetch(`https://api.geonames.org/timezoneJSON?lat=${this.props.lat}&lng=${this.props.lon}&username=napasponiki`)\r\n                                    .then(timezone=>timezone.json())\r\n        \r\n         this.setState({   \r\n            time: timezone.time,\r\n            min:  timezone.time.substr(14),\r\n            hour: timezone.time.substr(11,2)\r\n        })\r\n    }\r\n    whatdayIs(){\r\n        let date = new Date()\r\n        const {time, min, hour} = this.state\r\n        switch(date.getDay()){\r\n            case 1:\r\n                  return <h4>{hour}<span className=\"double_dots\">:</span>{min} Понедельник</h4>\r\n            case 2:\r\n                return<h4>{hour}<span className=\"double_dots\">:</span>{min} Вторник</h4>\r\n            case 3:\r\n                return <h4>{hour}<span className=\"double_dots\">:</span>{min} Среда</h4>\r\n            case 4:\r\n                return <h4>{hour}<span className=\"double_dots\">:</span>{min} Четверг</h4>\r\n            case 5:\r\n                return <h4>{hour}<span className=\"double_dots\">:</span>{min} Пятница</h4>\r\n            case 6:\r\n                return <h4>{hour}<span className=\"double_dots\">:</span>{min} Суббота</h4>\r\n            case 7:\r\n                return <h4>{hour}<span className=\"double_dots\">:</span>{min} Воскресенье</h4>\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n    this.whatdayIs()\r\n        )\r\n    }\r\n}","import './Title.css'\r\nimport React from 'react'\r\nconst Title = ({children, tag}) => {\r\n  \r\n    return (\r\n        <h4>{children}</h4>\r\n    )\r\n}\r\nexport default Title","import React, {Component} from 'react'\r\n\r\nexport default class Input extends Component {\r\n    componentDidMount(){\r\n        this.inputRefs.current.focus()\r\n    }\r\n    inputRefs  = React.createRef();\r\n    render(){\r\n        const {onChange,className,onKeyPress,value} = this.props\r\n        return(\r\n            <input \r\n            onChange={onChange}\r\n            className='box-input'\r\n            onKeyPress={onKeyPress}\r\n            value={value}\r\n            ref={this.inputRefs}\r\n            type=\"text\"/>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\n\r\nconst Numeric = ({temp, feelsLike,temp_min, temp_max,windDeg, windSpeed, className}) =>{\r\nconst wind =(deg = 150)=>{\r\n        if(deg > 180 && deg < 270 ){\r\n            return 'Юго-Запад'\r\n        }\r\n        if(deg > 270 && deg < 360 ){\r\n            return 'Северо-Запад'\r\n        }\r\n        if(deg > 0 && deg < 90 ){\r\n            return 'Северо-Восток'\r\n        }\r\n        if(deg > 180 && deg < 270 ){\r\n            return 'Юго-Восток'\r\n        }\r\n        \r\n}\r\n\r\n    return(\r\n        <div className='box-container__item'>\r\n            <p>за окном <span>{temp.toFixed(0)}</span></p>\r\n            <p>по ощущениям <span>{feelsLike.toFixed(0)}</span></p>\r\n            <p>min <span>{temp_min.toFixed(0)}</span>max <span>{temp_max.toFixed(0)}</span></p>\r\n            <p>ветер <span>{windSpeed}</span> m/s направление <span>{wind(windDeg)||'Южный'}</span></p>\r\n        </div>\r\n    )\r\n}\r\nexport default Numeric","import React from 'react'\r\nimport classnames from 'classnames'\r\nimport './SkyState.css'\r\nconst SkyState = ({sky, time}) => {\r\n    const classes = classnames(\r\n        'sky'\r\n    )\r\n    const iconPicker = (sky) => {\r\n      const hour = time.substr(11,2)\r\n            switch(sky){\r\n                case 'Snow':\r\n                    return hour > 19 || hour < 6 ? 'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_36-512.png':'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_37-512.png'\r\n                case 'Rain':\r\n                    return hour > 19 || hour < 6 ? 'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_8-512.png':'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_33-512.png'\r\n                case 'Clear':\r\n                   return hour > 19 || hour < 6 ? 'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_4-512.png':'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_3-512.png' \r\n                case 'Clouds':\r\n                    return hour > 19 || hour < 6 ? 'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_5-512.png':'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_2-512.png'\r\n                case 'Mist':\r\n                    return 'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_38-512.png'\r\n                case 'Smoke':\r\n                    return 'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_38-512.png'\r\n            }\r\n        }\r\n  \r\n    return(\r\n     <div className={classes}>\r\n         <img src={iconPicker(sky)} alt=\"\"/>\r\n     </div>\r\n )\r\n}\r\nexport default SkyState\r\n","import React from 'react'\r\nimport SkyState from '../planet/skyState/SkyState'\r\nimport Title from '../Title/Title'\r\nimport Text from '../../component/Text/Text'\r\nconst Visual = ({time, sky, temp, sunrise, sunset}) => {     \r\n\r\nconst translate=(weather)=>{\r\n        \r\n    switch(weather){\r\n        case 'Clear':\r\n            return 'Ясно'\r\n        case 'Clouds':\r\n            return 'Облачно'\r\n        case 'Snow':\r\n            return 'Снег'\r\n        case 'Rain':\r\n            return 'Дождь'\r\n        case 'Mist':\r\n            return 'Туман'\r\n        case 'Smoke':\r\n            return 'Смог'\r\n        default:\r\n            return 'new type of weather'\r\n    }\r\n}\r\n    return(\r\n    <div className=\"box-container__item\">\r\n        <SkyState\r\n                sky={sky}\r\n                time={time}\r\n        />\r\n        <Title>\r\n            {translate(sky)},{temp.toFixed(0)}C\r\n        </Title>\r\n\r\n    </div>\r\n    )\r\n}\r\nexport default Visual","import React from 'react'\r\n\r\nconst Container = ({children, className}) => {\r\n    return(\r\n        <div className={className}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nexport default Container","import React from 'react'\r\n\r\nconst Badge = ({children}) => {\r\n    return(\r\n        <div className=\"box-badge\">\r\n            {children.map((item)=>{\r\n            return <p key={item}>{item}</p>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Badge","import React,{Component} from 'react'\r\nimport './Box.css'\r\nimport classnames from 'classnames'\r\nimport Clock from '../Clock/Clock'\r\nimport Title from '../Title/Title'\r\nimport Input from '../Input/Input'\r\nimport Numeric from '../Numeric/Numeric'\r\nimport Visual from '../visual/Visual'\r\nimport Container from '../container/Container'\r\nimport PropTypes from 'prop-types'\r\nimport Badge from '../Badge/Badge'\r\nconst Box = ({sky, country, city, temp, feelsLike, temp_min, temp_max, windDeg, windSpeed, sunrise, sunset,onKeyPress,onChange,value, error, lat, lon, time}) => {\r\n    const whatTime=(time)=>{\r\n\r\n       return  time> 19 || time < 6 ? 'night' : 'day'\r\n       \r\n    }   \r\n\r\n        var date = new Date();\r\n        const night = whatTime(time.substr(11,2))\r\n        const classes = classnames(\r\n            'box',\r\n            night\r\n        );\r\n        return(\r\n            <Container className={classes}>\r\n                <Clock\r\n                    lat={lat}\r\n                    lon={lon}\r\n                />\r\n                <Title>\r\n                    {error?`${error}`:`${city},${country}`}\r\n                </Title>\r\n                <Badge>\r\n                {`рассвет: ${sunrise.substr(11)}`}\r\n                {`закат: ${sunset.substr(11)}`}\r\n\r\n                </Badge>\r\n                <Input\r\n                    onKeyPress={onKeyPress}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                />\r\n                <Container className='box-container'>\r\n                        <Numeric\r\n                            temp={temp}\r\n                            feelsLike={feelsLike}\r\n                            temp_min={temp_min}\r\n                            temp_max={temp_max}\r\n                            windSpeed={windSpeed}\r\n                            windDeg={windDeg}\r\n                        />\r\n                        <Visual\r\n                            time={time}\r\n                            sky={sky}\r\n                            temp={temp}\r\n                        />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    \r\n}\r\nexport default Box\r\nBox.propTypes={\r\n    sky: PropTypes.string, \r\n    country: PropTypes.string, \r\n    city: PropTypes.string, \r\n    temp: PropTypes.number, \r\n    feelsLike: PropTypes.number, \r\n    temp_min: PropTypes.number, \r\n    temp_max: PropTypes.number, \r\n    windDeg: PropTypes.number, \r\n    windSpeed: PropTypes.number, \r\n    sunrise: PropTypes.string, \r\n    sunset: PropTypes.string, \r\n    onKeyPress: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string\r\n}\r\nBox.defaultProps={\r\n    sky: 'Clear', \r\n    country: 'Zimbabve', \r\n    city: 'Chita', \r\n    temp: '12', \r\n    feelsLike: '12',\r\n    temp_min: '12', \r\n    temp_max: '12', \r\n    windDeg: 250, \r\n    windSpeed: 5, \r\n    sunrise: 11, \r\n    sunset: 11, \r\n    onKeyPress: ()=>{},\r\n    onChange: ()=>{},\r\n    value: ''\r\n}","import React from 'react'\r\nimport './Loader.css'\r\nconst Loader =()=>(\r\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n)\r\nexport default Loader","import React, {Component} from 'react'\r\nimport Box from '../../component/box/Box'\r\nimport Loader from '../../component/Loader/Loader'\r\nimport Input from '../../component/Input/Input'\r\nexport default class Weather extends Component {\r\n    state={\r\n        data: [],\r\n        weather: [],\r\n        coord: [],\r\n        loading: true,\r\n        findPlace: '',\r\n        error: '', \r\n        sunrise:'',\r\n        sunset:''\r\n    }\r\n    async componentDidMount(){\r\n        this.getData()\r\n    }\r\n    onChangeHandler = (e) =>{\r\n        this.setState({\r\n            findPlace: e.target.value\r\n        })\r\n    }\r\n     getData  = async(url)  =>{\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        try{\r\n            const FIND_CITY = this.state.findPlace || 'Лондон'\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${FIND_CITY}&units=metric&APPID=349083c430ac053a45a0745df28c1425`)\r\n                                        .then(response=>response.json())\r\n            \r\n            const timezone = await fetch(`https://api.geonames.org/timezoneJSON?lat=${response.coord.lat}&lng=${response.coord.lon}&username=napas`)\r\n                                        .then(timezone=>timezone.json())\r\n            console.log(timezone);\r\n            this.setState({\r\n                data: response,\r\n                coord: response.coord,\r\n                weather: {\r\n                    main: response.weather[0].main,\r\n                    description: response.weather[0].description,\r\n                    temp: response.main.temp,\r\n                    feelsLike: response.main.feels_like,\r\n                    temp_min: response.main.temp_min,\r\n                    temp_max: response.main.temp_max,\r\n                    pressure: response.main.pressure,\r\n                    humidity: response.main.humidity,\r\n                    windSpeed: response.wind.speed,\r\n                    windDeg: response.wind.deg,\r\n                    country: response.sys.country,\r\n                    name: response.name,\r\n                    sunrise: timezone.sunrise,\r\n                    sunset: timezone.sunset, \r\n                    time: timezone.time\r\n                },\r\n                loading: false,\r\n                findPlace: '',\r\n                error: false\r\n            })\r\n            \r\n            console.log( timezone.time);\r\n            console.log(response);\r\n            \r\n        }catch(e){\r\n            this.setState({\r\n                loading: false,\r\n                error: 'Неверно набран номер'\r\n            })\r\n            console.log(e);\r\n        }\r\n    }\r\n    findPlace = ({key}) => {\r\n        if(key === 'Enter'){\r\n           let find = this.state.findPlace\r\n           this.getData(find)\r\n           this.setState({\r\n            findPlace: ''\r\n           })\r\n        }\r\n    }\r\n    render(){\r\n        const { weather, coord} = this.state\r\n        \r\n        return(\r\n            <div className=\"weather\">\r\n                {!this.state.loading \r\n                ?\r\n                <Box\r\n                sky={weather.main}\r\n                country={weather.country}\r\n                city={weather.name}\r\n                temp={weather.temp}\r\n                temp_max={weather.temp_max}\r\n                temp_min={weather.temp_min}\r\n                feelsLike={weather.feelsLike}\r\n                windSpeed={weather.windSpeed}\r\n                windDeg={weather.windDeg}\r\n                sunrise={weather.sunrise}\r\n                sunset={weather.sunset}\r\n                onKeyPress={this.findPlace} \r\n                onChange={this.onChangeHandler}\r\n                value={this.state.findPlace}\r\n                error={this.state.error}\r\n                lat={coord.lat}\r\n                lon={coord.lon}\r\n                time={weather.time}\r\n                />:<Loader/>\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Weather from './containers/weather/Weather'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n       <Weather/>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}